[{"path":"https://dimitrisk.github.io/goal/articles/OpenStreetMap.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"OpenStreetMap","text":"Use goal package ‘osm’ group functions analysis OpenStreetMap POIs (Points Interest) road network.","code":""},{"path":"https://dimitrisk.github.io/goal/articles/OpenStreetMap.html","id":"pois-analysis","dir":"Articles","previous_headings":"","what":"POIs analysis","title":"OpenStreetMap","text":"goal package includes sample dataset presentation uav examples.","code":""},{"path":"https://dimitrisk.github.io/goal/articles/OpenStreetMap.html","id":"road-network-analysis","dir":"Articles","previous_headings":"","what":"Road network analysis","title":"OpenStreetMap","text":"Now","code":""},{"path":"https://dimitrisk.github.io/goal/articles/dimkaAlgorithm.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Generating GCP targets for UAV flight missions","text":"Use goal package optimal placement Ground-Truth Points (GCP) UAV missions. use uav group functions inside goal library.","code":""},{"path":"https://dimitrisk.github.io/goal/articles/dimkaAlgorithm.html","id":"example-data-in-goal-package","dir":"Articles","previous_headings":"","what":"Example Data in goal package","title":"Generating GCP targets for UAV flight missions","text":"goal package includes sample dataset (goaldata.data2) presentation uav examples. 5 points define polygon area area case study. use ‘uav.GenerateTargets’ function generate possible targets area. figure caption. can see figure , generated 17 targets inside polygon. points quite , need reduce . use ‘uav.DoReduction’ function reducing number “targets” based density points. Using ‘uav.DoReduction’ function need define cell size used calculation points density. plots bellow, show calculation focal density points, various cell sizes (5, 10, 15), study area return frequency table number cells per pixels: one two three generated target points inside polygon study area.","code":"library(sp) library(goal)  data(\"goaldata.data2\", package = \"goal\") print(goaldata.data2) ##          x        y ## 1 25.92548 39.13743 ## 2 25.92970 39.13591 ## 3 25.92927 39.13500 ## 4 25.92489 39.13641 ## 5 25.92548 39.13743 #xy=data.frame(x=c(25.92548,25.92970,25.92927,25.92489,25.92548), y=c(39.13743,39.13591,39.13500,39.13641,39.13743 ))  #coordinates(xy) <- ~x+y #plot(xy) one = uav.GenerateTargets(goaldata.data2) ##  ## uav.GenerateTargets: reprojecting 'data2' to: '+init=epsg:2100'. I continue. par(mar=c(0, 0, 0, 0)) plot(one$Polygon) plot(one$simia, col= as.numeric(as.factor(one$simia$type)), add=TRUE,        pch=3*as.numeric(as.factor(one$simia$type)) ) plot(one$lines, add=T) text(one$simia , labels = one$simia$id, col=\"brown\", pos=2) #library(rgdal) #rgdal::writeOGR(one$simia,dsn=paste0(\"Targets.shp\"),layer=\"Targets\",driver=\"ESRI Shapefile\", overwrite_layer = T) library(knitr)  par(mar=c(0, 0, 3, 0)) five = uav.showFocal(insimia = one$simia, inpol=one$Polygon, toplot = T, size = 5) kable(as.data.frame(five), col.names=c(\"Number of points\",\"Frequency\")) ten = uav.showFocal(insimia = one$simia, inpol=one$Polygon, toplot = T, size = 10) kable(as.data.frame(ten), col.names=c(\"Number of points\",\"Frequency\")) fifteen = uav.showFocal(insimia = one$simia, inpol=one$Polygon, toplot = T, size = 15) kable(as.data.frame(fifteen), col.names=c(\"Number of points\",\"Frequency\"))"},{"path":"https://dimitrisk.github.io/goal/articles/dimkaAlgorithm.html","id":"points-reduction","dir":"Articles","previous_headings":"","what":"Points Reduction","title":"Generating GCP targets for UAV flight missions","text":"Now use focal size 10 reduce target-points area. use DoReduction function: [1] “Removed point id:3” [1] “Removed point id:1” [1] “Removed point id:4” [1] “Removed point id:2” [1] “Removed point id:11” [1] “Removed point id:8” [1] “Removed point id:9” [1] “Removed point id:5” [1] “Removed point id:7” [1] “Removed point id:10” Now get results ste reduction: Results points","code":"result = goal::uav.DoReduction(one, insize=10) par(mar=c(0, 0, 3, 0)) plot(one$Polygon, main=paste0(length(one$simia),\" initial points in grey\\n\",length(result),\" final points in blue\")) #plot(one$simia, col=\"blue\", add=TRUE, pch=20) plot(one$simia,  add=TRUE, col=\"grey\") text(one$simia, labels=one$simia$id, pos=4, col=\"grey\")  plot(result, col=\"blue\", pch=20, add=TRUE) text(result, labels=result$id, pos=2, col=\"navyblue\")"},{"path":"https://dimitrisk.github.io/goal/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dimitris Kavroudakis. Author, maintainer.","code":""},{"path":"https://dimitrisk.github.io/goal/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kavroudakis D (2023). goal: GeOgraphical Analysis Library. R package version 1.0, https://dimitrisk.github.io/goal/.","code":"@Manual{,   title = {goal: GeOgraphical Analysis Library},   author = {Dimitris Kavroudakis},   year = {2023},   note = {R package version 1.0},   url = {https://dimitrisk.github.io/goal/}, }"},{"path":"https://dimitrisk.github.io/goal/index.html","id":"goal","dir":"","previous_headings":"","what":"GeOgraphical Analysis Library","title":"GeOgraphical Analysis Library","text":"Full documentation","code":""},{"path":"https://dimitrisk.github.io/goal/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"GeOgraphical Analysis Library","text":"R library analysis geographical data. includes 4 group functions: functions analysis networks (net). functions spatial-geometry conversions (geo). functions geographical visualization interpretation statistics (vis). functions analysis UAV missions flightpaths (uav).","code":""},{"path":"https://dimitrisk.github.io/goal/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"GeOgraphical Analysis Library","text":"","code":"library(devtools) install_github(\"dimitrisk/goal\")"},{"path":"https://dimitrisk.github.io/goal/index.html","id":"goal-1","dir":"","previous_headings":"","what":"goal","title":"GeOgraphical Analysis Library","text":"goal goal …","code":""},{"path":"https://dimitrisk.github.io/goal/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"GeOgraphical Analysis Library","text":"can install goal GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"dimitrisk/goal\")"},{"path":"https://dimitrisk.github.io/goal/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"GeOgraphical Analysis Library","text":"basic example shows solve common problem: special using README.Rmd instead just README.md? can include R chunks like : ’ll still need render README.Rmd regularly, keep README.md --date. devtools::build_readme() handy . also use GitHub Actions re-render README.Rmd every time push. example workflow can found : https://github.com/r-lib/actions/tree/v1/examples. can also embed plots, example:  case, don’t forget commit push resulting figure files, display GitHub CRAN.","code":"library(goal) ## basic example code summary(cars) #>      speed           dist        #>  Min.   : 4.0   Min.   :  2.00   #>  1st Qu.:12.0   1st Qu.: 26.00   #>  Median :15.0   Median : 36.00   #>  Mean   :15.4   Mean   : 42.98   #>  3rd Qu.:19.0   3rd Qu.: 56.00   #>  Max.   :25.0   Max.   :120.00"},{"path":"https://dimitrisk.github.io/goal/reference/geo.PointsAlongLines.html","id":null,"dir":"Reference","previous_headings":"","what":"Points Along Lines — geo.PointsAlongLines","title":"Points Along Lines — geo.PointsAlongLines","text":"Generate points along lines. Following geometrical line, produces points based factor.","code":""},{"path":"https://dimitrisk.github.io/goal/reference/geo.PointsAlongLines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Points Along Lines — geo.PointsAlongLines","text":"","code":"geo.PointsAlongLines(inroads, thefactor)"},{"path":"https://dimitrisk.github.io/goal/reference/geo.PointsAlongLines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Points Along Lines — geo.PointsAlongLines","text":"inroads SpatialLines() SpatialLinesDataFrame() object. generated points fall along line. thefactor general multiplier factor determines number points generated along line.","code":""},{"path":"https://dimitrisk.github.io/goal/reference/geo.PointsAlongLines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Points Along Lines — geo.PointsAlongLines","text":"SpatialPointsDataFrame() object holds generated points.","code":""},{"path":"https://dimitrisk.github.io/goal/reference/geo.PointsAlongLines.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Points Along Lines — geo.PointsAlongLines","text":"function generates number points along lines.","code":""},{"path":"https://dimitrisk.github.io/goal/reference/geo.PointsAlongLines.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Points Along Lines — geo.PointsAlongLines","text":"Dimitris Kavroudakis dimitris123@gmail.com","code":""},{"path":"https://dimitrisk.github.io/goal/reference/geo.PointsAlongLines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Points Along Lines — geo.PointsAlongLines","text":"","code":"library(goal) library(sp) library(rgeos) #> rgeos version: 0.6-2, (SVN revision 693) #>  GEOS runtime version: 3.8.0-CAPI-1.13.1  #>  Please note that rgeos will be retired during 2023, #> plan transition to sf functions using GEOS at your earliest convenience. #>  Linking to sp version: 1.6-0  #>  Polygon checking: TRUE  x = c(1,2,2,1,1,1,3,3) y = c(1,3,4,7,8,9,13,21) thefactor=2 road = sp::SpatialLines(list(sp::Lines(Line(cbind(x,y)), ID=\"a\")))  result = goal::geo.PointsAlongLines(road, thefactor = thefactor) plot(road) plot(result, add=TRUE)   result2 = goal::geo.PointsAlongLines(road, thefactor = 1) plot(road) plot(result2, add=TRUE)"},{"path":"https://dimitrisk.github.io/goal/reference/goaldata.GRregions.html","id":null,"dir":"Reference","previous_headings":"","what":"The 13 regions of Greece — goaldata.GRregions","title":"The 13 regions of Greece — goaldata.GRregions","text":"SpatialPolygonsDataFrame  13 regions Greece. variables dataset follows: code: ID region Name_en: Name region gdp_capita: GDP per capita region GDP_mil: GDP region milion euros pop_dens: Population density region pop: Population region total_area: Total area region \\(km^2\\)","code":""},{"path":"https://dimitrisk.github.io/goal/reference/goaldata.GRregions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The 13 regions of Greece — goaldata.GRregions","text":"SpatialPolygonsDataFrame()  13 regions Greece","code":""},{"path":"https://dimitrisk.github.io/goal/reference/goaldata.GRregions.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"The 13 regions of Greece — goaldata.GRregions","text":"shapefile corresponding polygons available Open-Data portal Greek Government. Population GDP values available Eurostat","code":""},{"path":"https://dimitrisk.github.io/goal/reference/goaldata.GRregions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The 13 regions of Greece — goaldata.GRregions","text":"","code":"library(goal) data(goaldata.GRregions)"},{"path":"https://dimitrisk.github.io/goal/reference/goaldata.data2.html","id":null,"dir":"Reference","previous_headings":"","what":"goaldata.data2 — goaldata.data2","title":"goaldata.data2 — goaldata.data2","text":" data2: x: x coordinates points y: y coordinates points","code":""},{"path":"https://dimitrisk.github.io/goal/reference/goaldata.data2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"goaldata.data2 — goaldata.data2","text":"data.frame() two columns (x,y) representing points Greece.","code":""},{"path":"https://dimitrisk.github.io/goal/reference/goaldata.data2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"goaldata.data2 — goaldata.data2","text":"Dimitris Kavroudakis","code":""},{"path":"https://dimitrisk.github.io/goal/reference/goaldata.data2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"goaldata.data2 — goaldata.data2","text":"","code":"library(goal) data(goaldata.data2)"},{"path":"https://dimitrisk.github.io/goal/reference/goaldata.roads.html","id":null,"dir":"Reference","previous_headings":"","what":"A dataset of 40 roads — goaldata.roads","title":"A dataset of 40 roads — goaldata.roads","text":"variables dataset follows: : id origin : id destination id: id road name: name road cost: cost units using road category: category road","code":""},{"path":"https://dimitrisk.github.io/goal/reference/goaldata.roads.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A dataset of 40 roads — goaldata.roads","text":"data.frame() 40 rows 6 variables","code":""},{"path":"https://dimitrisk.github.io/goal/reference/goaldata.roads.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A dataset of 40 roads — goaldata.roads","text":"Dimitris Kavroudakis","code":""},{"path":"https://dimitrisk.github.io/goal/reference/goaldata.roads.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A dataset of 40 roads — goaldata.roads","text":"","code":"library(goal) data(goaldata.roads)"},{"path":"https://dimitrisk.github.io/goal/reference/goaldata.towns.html","id":null,"dir":"Reference","previous_headings":"","what":"A dataset of 15 towns — goaldata.towns","title":"A dataset of 15 towns — goaldata.towns","text":"variables dataset follows: id: id town name: name town pop: population town meanincome: meanincome town","code":""},{"path":"https://dimitrisk.github.io/goal/reference/goaldata.towns.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A dataset of 15 towns — goaldata.towns","text":"data.frame() 15 rows 4 variables","code":""},{"path":"https://dimitrisk.github.io/goal/reference/goaldata.towns.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A dataset of 15 towns — goaldata.towns","text":"Dimitris Kavroudakis","code":""},{"path":"https://dimitrisk.github.io/goal/reference/goaldata.towns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A dataset of 15 towns — goaldata.towns","text":"","code":"library(goal) data(goaldata.towns)"},{"path":"https://dimitrisk.github.io/goal/reference/osm.CreateEmptyRaster.html","id":null,"dir":"Reference","previous_headings":"","what":"osm.CreateEmptyRaster — osm.CreateEmptyRaster","title":"osm.CreateEmptyRaster — osm.CreateEmptyRaster","text":"Create empty raster area. downloads area OSM services, creates empty raster area.","code":""},{"path":"https://dimitrisk.github.io/goal/reference/osm.CreateEmptyRaster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"osm.CreateEmptyRaster — osm.CreateEmptyRaster","text":"","code":"osm.CreateEmptyRaster(inPerioxi = \"Mytilene Municipal Unit\")"},{"path":"https://dimitrisk.github.io/goal/reference/osm.CreateEmptyRaster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"osm.CreateEmptyRaster — osm.CreateEmptyRaster","text":"inPerioxi name area (string) searching OSM services.","code":""},{"path":"https://dimitrisk.github.io/goal/reference/osm.CreateEmptyRaster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"osm.CreateEmptyRaster — osm.CreateEmptyRaster","text":"empty raster covers full area","code":""},{"path":[]},{"path":"https://dimitrisk.github.io/goal/reference/osm.CreateEmptyRaster.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"osm.CreateEmptyRaster — osm.CreateEmptyRaster","text":"Dimitris Kavroudakis dimitris123@gmail.com","code":""},{"path":"https://dimitrisk.github.io/goal/reference/osm.CreateEmptyRaster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"osm.CreateEmptyRaster — osm.CreateEmptyRaster","text":"","code":"library(devtools) #> Loading required package: usethis install_github(\"dimitrisk/goal\") #> Downloading GitHub repo dimitrisk/goal@HEAD #>  #> ── R CMD build ───────────────────────────────────────────────────────────────── #> * checking for file ‘/tmp/RtmpQzErsc/remotes2d066f080f12/dimitrisk-goal-9bc7788/DESCRIPTION’ ... OK #> * preparing ‘goal’: #> * checking DESCRIPTION meta-information ... OK #> * checking for LF line-endings in source and make files and shell scripts #> * checking for empty or unneeded directories #> * building ‘goal_1.0.tar.gz’ #>  #> Installing package into ‘/tmp/Rtmptqieum/temp_libpath48074c7b2afa’ #> (as ‘lib’ is unspecified) library(goal) result = goal::osm.CreateEmptyRaster(inPerioxi=\"Mytilene Municipal Unit\") result #> class      : RasterLayer  #> dimensions : 180, 360, 64800  (nrow, ncol, ncell) #> resolution : 0.0004453886, 0.0009165467  (x, y) #> extent     : 26.45563, 26.61597, 39.00806, 39.17304  (xmin, xmax, ymin, ymax) #> crs        : +proj=longlat +datum=WGS84 +no_defs  #>"},{"path":"https://dimitrisk.github.io/goal/reference/osm.combineAmenities.html","id":null,"dir":"Reference","previous_headings":"","what":"osm.combineAmenities — osm.combineAmenities","title":"osm.combineAmenities — osm.combineAmenities","text":"Combine AMENITIES results single dataset (Points, Polygons, Myltipolygons) (centroids).","code":""},{"path":"https://dimitrisk.github.io/goal/reference/osm.combineAmenities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"osm.combineAmenities — osm.combineAmenities","text":"","code":"osm.combineAmenities(inam)"},{"path":"https://dimitrisk.github.io/goal/reference/osm.combineAmenities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"osm.combineAmenities — osm.combineAmenities","text":"inam Amenities","code":""},{"path":"https://dimitrisk.github.io/goal/reference/osm.combineAmenities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"osm.combineAmenities — osm.combineAmenities","text":"nice","code":""},{"path":[]},{"path":"https://dimitrisk.github.io/goal/reference/osm.combineAmenities.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"osm.combineAmenities — osm.combineAmenities","text":"Dimitris Kavroudakis dimitris123@gmail.com","code":""},{"path":"https://dimitrisk.github.io/goal/reference/osm.combineAmenities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"osm.combineAmenities — osm.combineAmenities","text":"","code":"library(goal)"},{"path":"https://dimitrisk.github.io/goal/reference/osm.combineShops.html","id":null,"dir":"Reference","previous_headings":"","what":"osm.combineShops — osm.combineShops","title":"osm.combineShops — osm.combineShops","text":"Combine Shops results single dataset. merges Points, Polygons Myltipolygons single dataset Points using centroids polygons necessary.","code":""},{"path":"https://dimitrisk.github.io/goal/reference/osm.combineShops.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"osm.combineShops — osm.combineShops","text":"","code":"osm.combineShops(inam)"},{"path":"https://dimitrisk.github.io/goal/reference/osm.combineShops.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"osm.combineShops — osm.combineShops","text":"inam ","code":""},{"path":"https://dimitrisk.github.io/goal/reference/osm.combineShops.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"osm.combineShops — osm.combineShops","text":"nice","code":""},{"path":[]},{"path":"https://dimitrisk.github.io/goal/reference/osm.combineShops.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"osm.combineShops — osm.combineShops","text":"Dimitris Kavroudakis dimitris123@gmail.com","code":""},{"path":"https://dimitrisk.github.io/goal/reference/osm.combineShops.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"osm.combineShops — osm.combineShops","text":"","code":"library(goal)"},{"path":"https://dimitrisk.github.io/goal/reference/osm.getFrequency.html","id":null,"dir":"Reference","previous_headings":"","what":"osm.getFrequency — osm.getFrequency","title":"osm.getFrequency — osm.getFrequency","text":"Get Frequency Table","code":""},{"path":"https://dimitrisk.github.io/goal/reference/osm.getFrequency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"osm.getFrequency — osm.getFrequency","text":"","code":"osm.getFrequency(indf, inword = \"shop\", removeNA = T)"},{"path":"https://dimitrisk.github.io/goal/reference/osm.getFrequency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"osm.getFrequency — osm.getFrequency","text":"indf vec inword Boole removeNA Ad","code":""},{"path":"https://dimitrisk.github.io/goal/reference/osm.getFrequency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"osm.getFrequency — osm.getFrequency","text":"nice histogram single variable additional Cumulative Density curve.","code":""},{"path":[]},{"path":"https://dimitrisk.github.io/goal/reference/osm.getFrequency.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"osm.getFrequency — osm.getFrequency","text":"Dimitris Kavroudakis dimitris123@gmail.com","code":""},{"path":"https://dimitrisk.github.io/goal/reference/osm.getFrequency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"osm.getFrequency — osm.getFrequency","text":"","code":"library(goal)"},{"path":"https://dimitrisk.github.io/goal/reference/osm.getPOI.html","id":null,"dir":"Reference","previous_headings":"","what":"osm.getPOI — osm.getPOI","title":"osm.getPOI — osm.getPOI","text":"Get POIs city. Providing just key (e.x. amenities, shop, ...) get back osmdata object Spatial Feature (\"sf\") type.","code":""},{"path":"https://dimitrisk.github.io/goal/reference/osm.getPOI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"osm.getPOI — osm.getPOI","text":"","code":"osm.getPOI(inPerioxi = \"Mytilene Municipal Unit\", inkey = \"amenity\")"},{"path":"https://dimitrisk.github.io/goal/reference/osm.getPOI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"osm.getPOI — osm.getPOI","text":"inPerioxi perioxi inkey name key","code":""},{"path":"https://dimitrisk.github.io/goal/reference/osm.getPOI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"osm.getPOI — osm.getPOI","text":"nice","code":""},{"path":[]},{"path":"https://dimitrisk.github.io/goal/reference/osm.getPOI.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"osm.getPOI — osm.getPOI","text":"Dimitris Kavroudakis dimitris123@gmail.com","code":""},{"path":"https://dimitrisk.github.io/goal/reference/osm.getPOI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"osm.getPOI — osm.getPOI","text":"","code":"library(goal)"},{"path":"https://dimitrisk.github.io/goal/reference/osm.getRoads.html","id":null,"dir":"Reference","previous_headings":"","what":"osm.getRoads — osm.getRoads","title":"osm.getRoads — osm.getRoads","text":"Get roads city Spatial Feature (\"sf\") type.","code":""},{"path":"https://dimitrisk.github.io/goal/reference/osm.getRoads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"osm.getRoads — osm.getRoads","text":"","code":"osm.getRoads(inPerioxi = \"Mytilene Municipal Unit\")"},{"path":"https://dimitrisk.github.io/goal/reference/osm.getRoads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"osm.getRoads — osm.getRoads","text":"inPerioxi ssd","code":""},{"path":"https://dimitrisk.github.io/goal/reference/osm.getRoads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"osm.getRoads — osm.getRoads","text":"nice","code":""},{"path":[]},{"path":"https://dimitrisk.github.io/goal/reference/osm.getRoads.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"osm.getRoads — osm.getRoads","text":"Dimitris Kavroudakis dimitris123@gmail.com","code":""},{"path":"https://dimitrisk.github.io/goal/reference/osm.getRoads.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"osm.getRoads — osm.getRoads","text":"","code":"library(goal)"},{"path":"https://dimitrisk.github.io/goal/reference/stats.SimilarityOfVectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Similarity between vectors — stats.SimilarityOfVectors","title":"Similarity between vectors — stats.SimilarityOfVectors","text":"weighted similarity measure two numeric vectors.","code":""},{"path":"https://dimitrisk.github.io/goal/reference/stats.SimilarityOfVectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Similarity between vectors — stats.SimilarityOfVectors","text":"","code":"stats.SimilarityOfVectors(weights, final, initial)"},{"path":"https://dimitrisk.github.io/goal/reference/stats.SimilarityOfVectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Similarity between vectors — stats.SimilarityOfVectors","text":"weights Vector weights observation. final Vector numbers. initial Vector numbers.","code":""},{"path":"https://dimitrisk.github.io/goal/reference/stats.SimilarityOfVectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Similarity between vectors — stats.SimilarityOfVectors","text":"percentage similarity two numeric vectors.","code":""},{"path":"https://dimitrisk.github.io/goal/reference/stats.SimilarityOfVectors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Similarity between vectors — stats.SimilarityOfVectors","text":"","code":"library(goal)  weights=c(0.5, 0.25, 0.25) final=c(42,5,36) initial=c(40,5,36)  plot(final, initial, cex=weights*2, col=\"red\",   xlim=range(initial, final), ylim=range(initial, final)) abline(0,1)   per = goal::stats.SimilarityOfVectors(weights, final, initial) print(per) #> [1] 0.9756098"},{"path":"https://dimitrisk.github.io/goal/reference/uav.DoReduction.html","id":null,"dir":"Reference","previous_headings":"","what":"uav.DoReduction — uav.DoReduction","title":"uav.DoReduction — uav.DoReduction","text":"reduction targets.","code":""},{"path":"https://dimitrisk.github.io/goal/reference/uav.DoReduction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"uav.DoReduction — uav.DoReduction","text":"","code":"uav.DoReduction(intargets, insize = 15)"},{"path":"https://dimitrisk.github.io/goal/reference/uav.DoReduction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"uav.DoReduction — uav.DoReduction","text":"intargets SpatialPointsDataFrame location targets reduce insize used far.","code":""},{"path":"https://dimitrisk.github.io/goal/reference/uav.DoReduction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"uav.DoReduction — uav.DoReduction","text":"list polygons, points sminos reduced target locations.","code":""},{"path":"https://dimitrisk.github.io/goal/reference/uav.DoReduction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"uav.DoReduction — uav.DoReduction","text":"","code":"library(goal) data(goaldata.data2) one = goal::uav.GenerateTargets(goaldata.data2) #>  #> uav.GenerateTargets: reprojecting 'data2' to: '+init=epsg:2100'. I continue. #> Warning: GEOS support is provided by the sf and terra packages among others #> Warning: GEOS support is provided by the sf and terra packages among others #> Warning: GEOS support is provided by the sf and terra packages among others #> Warning: GEOS support is provided by the sf and terra packages among others #> Warning: spgeom1 and spgeom2 have different proj4 strings #> Warning: GEOS support is provided by the sf and terra packages among others #> Warning: GEOS support is provided by the sf and terra packages among others result = uav.DoReduction(one, insize=20)  print(result) #>             coordinates        x       y               type id #> 1   (666419.6, 4333333) 666419.6 4333333 Polygons Centroids  1 #> 11  (666308.6, 4333421) 666308.6 4333421 Polygons Centroids  2 #> 12  (666447.5, 4333406) 666447.5 4333406 Polygons Centroids  3 #> 13  (666558.5, 4333318) 666558.5 4333318 Polygons Centroids  4 #> 14  (666443.1, 4333366) 666443.1 4333366      Intersections  5 #> 15    (666217, 4333391) 666217.0 4333391            Koryfes  6 #> 2   (666265.6, 4333506) 666265.6 4333506            Koryfes  7 #> 3   (666633.7, 4333345) 666633.7 4333345            Koryfes  8 #> 4   (666598.7, 4333243) 666598.7 4333243            Koryfes  9 #> 16  (666330.1, 4333379) 666330.1 4333379       Line Centers 10 #> 111 (666538.4, 4333355) 666538.4 4333355       Line Centers 11 #> 121 (666354.4, 4333436) 666354.4 4333436       Line Centers 12 #> 131 (666520.9, 4333305) 666520.9 4333305       Line Centers 13 #> 17  (666241.3, 4333449) 666241.3 4333449  Boundaries Ceners 14 #> 21  (666407.9, 4333317) 666407.9 4333317  Boundaries Ceners 15 #> 31  (666449.7, 4333425) 666449.7 4333425  Boundaries Ceners 16 #> 41  (666616.2, 4333294) 666616.2 4333294  Boundaries Ceners 17"},{"path":"https://dimitrisk.github.io/goal/reference/uav.GenerateTargets.html","id":null,"dir":"Reference","previous_headings":"","what":"uav.GenerateTargets — uav.GenerateTargets","title":"uav.GenerateTargets — uav.GenerateTargets","text":"Generate locations targets (points) inside study area (polygon) keeping low density points, covering parts area following shape study area.","code":""},{"path":"https://dimitrisk.github.io/goal/reference/uav.GenerateTargets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"uav.GenerateTargets — uav.GenerateTargets","text":"","code":"uav.GenerateTargets(   data2,   SourceCRS = \"+init=epsg:4326\",   TargetCRS = \"+init=epsg:2100\",   ploting = 0,   export = 0,   dosimplify = 0,   output_folder = \"Results\" )"},{"path":"https://dimitrisk.github.io/goal/reference/uav.GenerateTargets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"uav.GenerateTargets — uav.GenerateTargets","text":"data2 points polygon study area. SourceCRS Source CRS points TargetCRS Target CRS points ploting Boolean whether plot results. export Boolean dosimplify Boolean whether simplify geometry Polygon study area. output_folder Path export folder","code":""},{"path":"https://dimitrisk.github.io/goal/reference/uav.GenerateTargets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"uav.GenerateTargets — uav.GenerateTargets","text":"list three objects: Polygon: SpatialPolygonsDataFrame() ConvexHull polygon area simia: SpatialPointsDataFrame() targets. sminos: SpatialPointsDataFrame() initial data points lines: SpatialLinesDataFrame() lines used calculation","code":""},{"path":"https://dimitrisk.github.io/goal/reference/uav.GenerateTargets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"uav.GenerateTargets — uav.GenerateTargets","text":"","code":"library(goal) data(goaldata.data2, package =\"goal\") library(sp) one = goal::uav.GenerateTargets(goaldata.data2) #>  #> uav.GenerateTargets: reprojecting 'data2' to: '+init=epsg:2100'. I continue. #> Warning: GEOS support is provided by the sf and terra packages among others #> Warning: GEOS support is provided by the sf and terra packages among others #> Warning: GEOS support is provided by the sf and terra packages among others #> Warning: GEOS support is provided by the sf and terra packages among others #> Warning: spgeom1 and spgeom2 have different proj4 strings #> Warning: GEOS support is provided by the sf and terra packages among others #> Warning: GEOS support is provided by the sf and terra packages among others plot(one$Polygon) plot(one$sminos, col=\"red\", add=TRUE) plot(one$simia, col=\"blue\", add=TRUE)"},{"path":"https://dimitrisk.github.io/goal/reference/uav.removeOnePointByDM.html","id":null,"dir":"Reference","previous_headings":"","what":"uav.removeOnePointByDM — uav.removeOnePointByDM","title":"uav.removeOnePointByDM — uav.removeOnePointByDM","text":"Eliminate one point Distance Matrix points","code":""},{"path":"https://dimitrisk.github.io/goal/reference/uav.removeOnePointByDM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"uav.removeOnePointByDM — uav.removeOnePointByDM","text":"","code":"uav.removeOnePointByDM(insimia)"},{"path":"https://dimitrisk.github.io/goal/reference/uav.removeOnePointByDM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"uav.removeOnePointByDM — uav.removeOnePointByDM","text":"insimia something","code":""},{"path":"https://dimitrisk.github.io/goal/reference/uav.removeOnePointByDM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"uav.removeOnePointByDM — uav.removeOnePointByDM","text":"SpatialPointsDataFrame 1 reduced point","code":""},{"path":"https://dimitrisk.github.io/goal/reference/uav.showFocal.html","id":null,"dir":"Reference","previous_headings":"","what":"uav.showFocal — uav.showFocal","title":"uav.showFocal — uav.showFocal","text":"Show Focal map study area.","code":""},{"path":"https://dimitrisk.github.io/goal/reference/uav.showFocal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"uav.showFocal — uav.showFocal","text":"","code":"uav.showFocal(insimia, inpol, size = 20, toplot = TRUE)"},{"path":"https://dimitrisk.github.io/goal/reference/uav.showFocal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"uav.showFocal — uav.showFocal","text":"insimia something inpol simia SpatialPOintsDataFrame size cell size (rows-columns) toplot Whether plot diagram focal density points study area","code":""},{"path":"https://dimitrisk.github.io/goal/reference/uav.showFocal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"uav.showFocal — uav.showFocal","text":"frequency table number values per cell focal operation","code":""},{"path":"https://dimitrisk.github.io/goal/reference/uav.showFocal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"uav.showFocal — uav.showFocal","text":"","code":"library(goal) data(goaldata.data2, package =\"goal\") one = goal::uav.GenerateTargets(goaldata.data2) #>  #> uav.GenerateTargets: reprojecting 'data2' to: '+init=epsg:2100'. I continue. #> Warning: GEOS support is provided by the sf and terra packages among others #> Warning: GEOS support is provided by the sf and terra packages among others #> Warning: GEOS support is provided by the sf and terra packages among others #> Warning: GEOS support is provided by the sf and terra packages among others #> Warning: spgeom1 and spgeom2 have different proj4 strings #> Warning: GEOS support is provided by the sf and terra packages among others #> Warning: GEOS support is provided by the sf and terra packages among others result = goal::uav.showFocal(one$simia, one$Polygon, size=20, toplot=TRUE)  print(result) #>  #>   0   1   2  #> 119 106  16"},{"path":"https://dimitrisk.github.io/goal/reference/vis.BarPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"vis.BarPlot — vis.BarPlot","title":"vis.BarPlot — vis.BarPlot","text":"nice barplot table bar labels absolute/relative frequencies.","code":""},{"path":"https://dimitrisk.github.io/goal/reference/vis.BarPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vis.BarPlot — vis.BarPlot","text":"","code":"vis.BarPlot(   inTable,   percentage = F,   subtitle = TRUE,   main = \"main\",   ylab = \"\",   decimals = 1 )"},{"path":"https://dimitrisk.github.io/goal/reference/vis.BarPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vis.BarPlot — vis.BarPlot","text":"inTable table plot percentage Whether use percentages absolute numbers subtitle Whether add informative subtitle barplot main main title barplot ylab title Y axes decimals Number decimals use","code":""},{"path":"https://dimitrisk.github.io/goal/reference/vis.BarPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vis.BarPlot — vis.BarPlot","text":"nice barplot inTable","code":""},{"path":[]},{"path":"https://dimitrisk.github.io/goal/reference/vis.BarPlot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"vis.BarPlot — vis.BarPlot","text":"Dimitris Kavroudakis dimitris123@gmail.com","code":""},{"path":"https://dimitrisk.github.io/goal/reference/vis.BarPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"vis.BarPlot — vis.BarPlot","text":"","code":"library(goal) library(plotrix) cars = table( c(1,1,1,1,3,2,4,3,5,4,6,5,1,5,5,2,2,2,3,3,3,1,1,2) ) vis.BarPlot(inTable = cars, percentage = TRUE,  subtitle = TRUE, main = \"Relative frequency of cars\", ylab = \"Cars\", decimals=1)"},{"path":"https://dimitrisk.github.io/goal/reference/vis.Hist.html","id":null,"dir":"Reference","previous_headings":"","what":"vis.Hist — vis.Hist","title":"vis.Hist — vis.Hist","text":"nice histogram single variable additional Cumulative Density curve.","code":""},{"path":"https://dimitrisk.github.io/goal/reference/vis.Hist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vis.Hist — vis.Hist","text":"","code":"vis.Hist(inVector, ecdf = T, ...)"},{"path":"https://dimitrisk.github.io/goal/reference/vis.Hist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vis.Hist — vis.Hist","text":"inVector vector numbers plot ecdf Boolean addition red line Cumulative Density right histogram plot ... Additional arguments passed 'hist' command base histogram.","code":""},{"path":"https://dimitrisk.github.io/goal/reference/vis.Hist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vis.Hist — vis.Hist","text":"nice histogram single variable additional Cumulative Density curve.","code":""},{"path":[]},{"path":"https://dimitrisk.github.io/goal/reference/vis.Hist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"vis.Hist — vis.Hist","text":"Dimitris Kavroudakis dimitris123@gmail.com","code":""},{"path":"https://dimitrisk.github.io/goal/reference/vis.Hist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"vis.Hist — vis.Hist","text":"","code":"library(goal)  set.seed(1821) myNumbers = rnorm(500, 130, 10) vis.Hist(myNumbers, freq=FALSE, main=\"This is the main title\", xlab=\"X axis title\")"}]
